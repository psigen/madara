
project (Kats) : using_madara, using_ace, using_splice {

  requires += kats

  sharedname = Kats
  dynamicflags += KATS_BUILD_DLL
  libout = $(MADARA_ROOT)/lib

  libs += Madara

  Build_Files {
    Kats.mpc
    using_kats.mpb
  }

  Inline_Files {
    kats
  }

  Header_Files {
    kats
    utility/Log_Macros.h
  }

  Source_Files {
    kats/Test_Framework.cpp
  }
}


project (Kats_Process) : using_kats, using_madara, using_ace {
  
  exeout = $(MADARA_ROOT)/bin
  exename = kats_process
  
  Build_Files {
    Kats.mpc
  }

  Header_Files {
    utility/Log_Macros.h
  }

  Source_Files {
    kats/Process.cpp
  }
}

project (Kats_Batch) : using_kats, using_madara, using_ace {
  
  exeout = $(MADARA_ROOT)/bin
  exename = kats_batch
  
  macros += TIXML_USE_STL
  
  Build_Files {
    Kats.mpc
  }

  Header_Files {
    kats/tinyxml.h
    kats/tinystr.h
    utility/Log_Macros.h
  }

  Source_Files {
    kats/tinyxml.cpp
    kats/tinyxmlparser.cpp
    kats/tinyxmlerror.cpp
    kats/tinystr.cpp
    kats/Batch.cpp
  }
}

project (Kats_Sleep) : using_kats, using_madara, using_ace {
  
  exeout = $(MADARA_ROOT)/bin
  exename = kats_sleep
  
  Build_Files {
    Kats.mpc
  }

  Header_Files {
    utility/Log_Macros.h
  }

  Source_Files {
    kats/Sleep.cpp
  }
}


project (Kats_Observer) : using_kats, using_madara, using_ace {
  
  exeout = $(MADARA_ROOT)/bin
  exename = kats_observer
  
  Build_Files {
    Kats.mpc
  }

  Header_Files {
    utility/Log_Macros.h
  }

  Source_Files {
    kats/Observer.cpp
  }
}
