
project (Test_Basic_Reasoning) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_basic_reasoning
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_basic_reasoning.cpp
  }
}

project (Test_Reasoning_Throughput) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_reasoning_throughput
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_reasoning_throughput.cpp
  }
}

project (Test_Key_Expansion) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_key_expansion
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_key_expansion.cpp
  }
}

project (Test_Print_Statement) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_print_statement
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_print_statement.cpp
  }
}

project (Test_Wait_With_ACE) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_wait_with_ace
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_wait_with_ace.cpp
  }
}


project (Test_Distributed_Finisher) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_distributed_finisher
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_distributed_finisher.cpp
  }
}

project (Test_Knowledge_Domains) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_knowledge_domains
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_knowledge_domains.cpp
  }
}

project (Test_Synchronization) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_synchronization
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_synchronization.cpp
  }
}

project (Test_Synchronization_Three_State) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_synchronization_three_state
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_synchronization_three_state.cpp
  }
}

project (Test_Quality) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_quality
  after += Madara
  
  requires += tests
  
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_quality.cpp
  }
}

project (Test_Distributed_Finisher_With_Set) : using_madara, using_ace, using_splice {
  exeout = $(MADARA_ROOT)/bin
  exename = test_distributed_finisher_with_set
  after += Madara

  requires += tests
    
  libs += Madara

  Build_Files {
    Tests.mpc
  }

  Header_Files {
  }

  Source_Files {
    ../tests/test_distributed_finisher_with_set.cpp
  }
}
